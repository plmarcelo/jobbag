security:
    encoders:
        JobBag\Domain\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        api_user_provider:
            entity:
                class: JobBag\Domain\Entity\User
                property: username
                # if you're using multiple entity managers
                # manager_name: customer

    firewalls:
        #        dev:
        #            pattern: ^/(_(profiler|wdt)|css|images|js)/
        #            security: false

        login:
            pattern: ^/login
            stateless: true
            anonymous: true
            form_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false

        prv:
            pattern: ^/prv
            stateless: true
            anonymous: false
            provider: api_user_provider
            guard:
                authenticators:
                - lexik_jwt_authentication.jwt_token_authenticator

        pub:
            pattern: ^/pub
            stateless: true
            anonymous: true

    #        main:
    #            anonymous: ~
    #            http_basic: ~
    #            provider: db_provider
    #            user_checker: JobBag\Infrastructure\Security\UserActive

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/pub,       roles: IS_AUTHENTICATED_ANONYMOUSLY }
    - { path: ^/prv,       roles: IS_AUTHENTICATED_FULLY }

